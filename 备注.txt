\\1、实验EVENODD(p,4)   p是质数，变量，
   在不同的分集合算法下的某列失效修复它所需要的实际要下载的位数（修复带宽Repair bandwidth），
   与EVENODD(p,4),EVEODD(p,2)比较。

\\2、主要文件如下：
A、distribute2_func.m    EVENODD(p,3)(师兄的文章中的分集方法下的bandwidth统计函数，A Lower Bound on Disk Reads for
                                    Single Information Disk Failure Recovery and One Recovery Scheme
                                    for EVENODD(p, 3))


B.typle_new.m            EVENODD(p,4) 自己设计的不同分集版本下bandwidth的统计函数
 

C、example.m             比较EVENODD(p,4)，EVENODD(p,3)，EVENODD(p,2)，画比较曲线图


\\3、测试文件如下：
A、typle_settle.m        EVENODD(p,4)在不同p值，不同算法下的集合分配情况，可输出集合及集合交点的具体情况

B、example2.m            EVENODD(p,3)在不同p值下的集合分配情况，可输出集合及集合交点的具体情况，
                        *确定1定位划分子图的方法，
                         所有交点的列举。

C.distribute1.m          最早对EVENODD(p,4)的版本尝试可不管，可参考
  distribute.m


数据
download_3 :
17	33	83	114	198	246	367	582	673	949	1173	1287	1541	1960	2431	2602	3140	3522	3741	4362	4831	5560	6600
download_4 :
17	36	84	120	204	252	369	583	666	949	1168	1279	1524	1933	2402	2567	3080	3467	3680	4295	4735	5462	6456
limit_2:
16	33	85	120	208	261	385	616	705	1008	1240	1365	1633	2080	2581	2760	3333	3745	3960	4641	5125	5896	7008
limit_3:
13	28	75	106	185	232	343	549	628	898	1105	1216	1455	1853	2299	2458	2968	3335	3526	4132	4563	5249	6238
limit_4:
11	26	70	99	173	218	322	515	590	843	1037	1142	1366	1739	2158	2307	2786	3130	3309	3878	4282	4925	5853

\\4、次要函数文件如下：  
A、romove1_5.m           是大集合里除去集合里的元素  （U,A） （U,A,B）（U,A,B,C）（U,A,B,C,D）。
B、invert.m              是一个数在有限域里的逆   2^(-1)*2 = 1 mod p; p = 5时 2^(-1) = 3。
C、magnify.m             是截取图片的某个部分的函数方法，没有3B的划分子图的方法好，+ - ：放大; < > :缩放范围
D、order1.m              是2的乘法阶或者3的乘法阶测试   p=7时 ord=3; H=[1,2,4] 3H=[3,6,5]; U={0,1,2,3,4,5,6}被分为
                        （p-1）/ord个子集 即为｛[0,1,3][2,5,4]｝(xH-1,x~=0);


\\5
所有.fig都是MATLAB文件，是图文件
